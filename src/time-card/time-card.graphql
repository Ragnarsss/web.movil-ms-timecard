scalar Date

type TimeCard {
  id: ID!
  userId: Int!
  periodStart: Date
  periodEnd: Date
}

input CreateTimeCardInput {
  userId: Int!
  periodStart: Date!
}

input UpdateTimeCardInput {
  periodStart: Date
  periodEnd: Date
}

type Query {
  findAll: [TimeCard]!
  findOne(id: Int!): TimeCard
}

type Mutation {
  create(createTimeCardInput: CreateTimeCardInput!): TimeCard!
  update(updateTimeCardInput: UpdateTimeCardInput!): TimeCard!
  remove(id: Int!): TimeCard
}
